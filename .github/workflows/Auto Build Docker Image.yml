name: Auto Build Docker Image

on:
  workflow_dispatch:
  schedule:
    - cron: '30 21 * * *'

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - name: 检出代码
        uses: actions/checkout@v4
      
      # 设置 QEMU
      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v3
      
      # 设置 Docker Buildx
      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 登录到 Docker Hub
      - name: 登录到 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 获得仓库中的ReleaseTag
      - name: Set Version
        id: set-version
        run: |
          echo "::set-output name=version::$(cat ReleaseTag | head -n1)"
          echo "ReleaseTag=$(cat ReleaseTag | head -n1)"

      # 缓存release tag，用作与下一次执行任务时获取到到release tag做对比
      - name: Cache tag
        id: cache-tag
        uses: actions/cache@v4
        with:
          path: ./tag/
          key: ${{ runner.os }}-tag-v${{ steps.set-version.outputs.version }}

      # 获取将latest release tag，未命中缓存则更新ReleaseTag
      - name: Get latest release tag
        id: get-release-tag
        if: steps.cache-tag.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./tag
          echo ${{ steps.set-version.outputs.version }} > ./tag/tag-${{ steps.set-version.outputs.version }}
          echo "::set-output name=status::success"

      # Build and push
      - name: Build and push
        if: steps.get-release-tag.outputs.status == 'success'
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            superng6/qbittorrentee:${{ steps.set-version.outputs.version }}
            superng6/qbittorrentee:latest
